/* AppFrame.java
 *
 * Copyright (C) 2015 Raphael Jolly
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public License
 * as published by the Free Software Foundation; either version 2 of
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public
 * License along with this program; if not, write to the Free Software
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

package linoleum.application;

import java.net.URI;
import javax.swing.Icon;
import javax.swing.JDesktopPane;
import javax.swing.JInternalFrame;

public abstract class AppFrame extends Frame implements App {
	private String type;
	private Icon icon;
	private URI uri;

	public AppFrame() {
		initComponents();
	}

	public void setIcon(final Icon icon) {
		this.icon = icon;
	}

	@Override
	public Icon getIcon() {
		return icon;
	}

	public void setMimeType(final String type) {
		this.type = type;
	}

	@Override
	public String getMimeType() {
		return type;
	}

	public void setURI(final URI uri) {
		this.uri = uri;
		open();
	}

	public URI getURI() {
		return uri;
	}

	public abstract AppFrame getFrame();

	public final void open(final ApplicationManager manager, final URI uri) {
		final AppFrame frame = find(manager.getDesktopPane(), uri);
		frame.setApplicationManager(manager);
		if (!uri.equals(frame.getURI())) {
			frame.setURI(uri);
		}
	}

	private AppFrame find(final JDesktopPane desktop, final URI uri) {
		for (final JInternalFrame c : desktop.getAllFrames()) {
			if (getClass().isAssignableFrom(c.getClass())) {
				final AppFrame frame = (AppFrame)c;
				if (frame.getURI() == null || uri.equals(frame.getURI())) {
					return frame;
				}
			}
		}
		return getFrame();
	}

	public final void open(final ApplicationManager manager) {
		final AppFrame frame = getFrame();
		frame.setApplicationManager(manager);
	}

	protected void open() {
	}

	protected void close() {
	}

	/**
	 * This method is called from within the constructor to initialize the
	 * form. WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
        // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
        private void initComponents() {

                addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
                        public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                        }
                        public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                                formInternalFrameClosing(evt);
                        }
                        public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
                        }
                        public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
                        }
                        public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
                        }
                        public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                        }
                        public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
                        }
                });

                pack();
        }// </editor-fold>//GEN-END:initComponents

        private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing
		close();
        }//GEN-LAST:event_formInternalFrameClosing

        // Variables declaration - do not modify//GEN-BEGIN:variables
        // End of variables declaration//GEN-END:variables
}
